{"id":1344,"website_id":152,"website_location_id":210,"status":"success","result":{"steps":[{"cmd_name":"kubectl","result":{"stdout":"","stderr":"Error from server (AlreadyExists): namespaces \"instance-152\" already exists\n","exit_code":1}},{"cmd_name":"kubectl","result":{"stdout":"","stderr":"Error from server (AlreadyExists): secrets \"regcred\" already exists\n","exit_code":1}},{"cmd_name":"verify_size_repo_cmd","result":{"stdout":"23532\t/home/78/mytestt5667/\n","stderr":"","exit_code":0}},{"cmd_name":"build_cmd","result":{"stdout":"Sending build context to Docker daemon  28.16kB\r\r\nStep 1/15 : FROM node:12-alpine\n ---\u003e 3fb8a14691d9\nStep 2/15 : WORKDIR /opt/app\n ---\u003e Using cache\n ---\u003e 3664c74f0d27\nStep 3/15 : ENV PORT=80\n ---\u003e Using cache\n ---\u003e 32ffd84fb732\nStep 4/15 : RUN apk --update add make python gcc g++\n ---\u003e Using cache\n ---\u003e c6ee47b901c6\nStep 5/15 : RUN npm install -g nodemon\n ---\u003e Using cache\n ---\u003e 2b86b2da1c53\nStep 6/15 : RUN npm install -g pm2\n ---\u003e Using cache\n ---\u003e 040877794eeb\nStep 7/15 : RUN echo 'set -e' \u003e /boot.sh # this is the script which will run on start\n ---\u003e Using cache\n ---\u003e c436ab0c9c66\nStep 8/15 : RUN echo 'nb=`cat package.json | grep start | wc -l` \u0026\u0026 if test \"$nb\" = \"0\" ; then echo \"*** Boot issue: No start command found in your package.json in the scripts. See https://docs.npmjs.com/cli/start\" ; exit 1 ; fi' \u003e\u003e /boot.sh\n ---\u003e Using cache\n ---\u003e abb58965a536\nStep 9/15 : RUN echo 'echo will install crond...' \u003e\u003e /boot.sh\n ---\u003e Using cache\n ---\u003e abbfcdca6261\nStep 10/15 : RUN echo 'crond' \u003e\u003e /boot.sh\n ---\u003e Using cache\n ---\u003e 68d07970911d\nStep 11/15 : COPY package*.json ./\n ---\u003e d7abc623c4a1\nStep 12/15 : RUN npm install --production\n ---\u003e Running in 9aed6b041a2b\n\u001b[91mnpm WARN\u001b[0m\u001b[91m helloworld@1.0.0 No description\n\u001b[0m\u001b[91mnpm \u001b[0m\u001b[91mWARN helloworld@1.0.0 No repository field.\n\u001b[0m\u001b[91m\n\u001b[0mup to date in 0.49s\nfound 0 vulnerabilities\n\nRemoving intermediate container 9aed6b041a2b\n ---\u003e e6044dfedc7b\nStep 13/15 : COPY . .\n ---\u003e 09a66d856d4e\nStep 14/15 : RUN mkdir -p logs\n ---\u003e Running in 2aad025673ec\nRemoving intermediate container 2aad025673ec\n ---\u003e 84454889065f\nStep 15/15 : CMD sh /boot.sh \u0026\u0026 pm2-runtime --output logs/out.log --error logs/error.log start npm -- start\n ---\u003e Running in b8586ac81bb4\nRemoving intermediate container b8586ac81bb4\n ---\u003e cfba0e33a1ad\nSuccessfully built cfba0e33a1ad\nSuccessfully tagged registry.digitalocean.com/production-openode/mytestt5667:mytestt5667--152--1344\n","stderr":"","exit_code":0}},{"cmd_name":"push_cmd","result":{"stdout":"Login Succeeded\nThe push refers to repository [registry.digitalocean.com/production-openode/mytestt5667]\n15cf774fcee4: Preparing\nabe77aed63f6: Preparing\nef017e45cbb1: Preparing\n09f4a4f3afe5: Preparing\n10b61bf0b9f2: Preparing\n85d88a9ee275: Preparing\n53ac959fb4b1: Preparing\n451ad6910139: Preparing\n93d5ac0f7c5f: Preparing\n377e30816799: Preparing\ne9f94c3b4e3b: Preparing\ncd85e7e99bdf: Preparing\nb30bf57ce25d: Preparing\n03d715c1cfeb: Preparing\n0398b74f9bfa: Preparing\n77cae8ab23bf: Preparing\n85d88a9ee275: Waiting\ne9f94c3b4e3b: Waiting\n53ac959fb4b1: Waiting\ncd85e7e99bdf: Waiting\nb30bf57ce25d: Waiting\n451ad6910139: Waiting\n93d5ac0f7c5f: Waiting\n03d715c1cfeb: Waiting\n0398b74f9bfa: Waiting\n377e30816799: Waiting\n77cae8ab23bf: Waiting\n10b61bf0b9f2: Layer already exists\n85d88a9ee275: Layer already exists\n53ac959fb4b1: Layer already exists\n451ad6910139: Layer already exists\n93d5ac0f7c5f: Layer already exists\n377e30816799: Layer already exists\ne9f94c3b4e3b: Layer already exists\ncd85e7e99bdf: Layer already exists\nabe77aed63f6: Pushed\n09f4a4f3afe5: Pushed\n03d715c1cfeb: Layer already exists\nb30bf57ce25d: Layer already exists\n77cae8ab23bf: Layer already exists\n15cf774fcee4: Pushed\n0398b74f9bfa: Layer already exists\nef017e45cbb1: Pushed\nmytestt5667--152--1344: digest: sha256:e54bdcbc9a022fb79f4bc3d4ede31192d8a3a4190e99eb1e655060a07e13cfb5 size: 3659\n","stderr":"WARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\n","exit_code":0}},{"cmd_name":"retrieve_dotenv_cmd","result":{"stdout":"","stderr":"cat: /home/78/mytestt5667/.env: No such file or directory\n","exit_code":1}},{"cmd_name":"kubectl","result":{"stdout":"namespace/instance-152 unchanged\nconfigmap/dotenv configured\ndeployment.apps/www-deployment configured\nservice/main-service unchanged\ningress.extensions/main-ingress unchanged\n","stderr":"","exit_code":0}},{"cmd_name":"delete_files","result":{"stdout":"","stderr":"","exit_code":0}},{"cmd_name":"kubectl","result":{"stdout":"","stderr":"","exit_code":1}},{"cmd_name":"verify_can_deploy","result":"done"},{"cmd_name":"initialization","result":"done"},{"cmd_name":"launch","result":"done"},{"cmd_name":"verify_instance_up","result":"done"},{"cmd_name":"kubectl","result":{"stdout":"{\n    \"apiVersion\": \"v1\",\n    \"items\": [\n        {\n            \"apiVersion\": \"v1\",\n            \"kind\": \"Pod\",\n            \"metadata\": {\n                \"creationTimestamp\": \"2020-03-03T19:14:11Z\",\n                \"generateName\": \"www-deployment-764df977c5-\",\n                \"labels\": {\n                    \"app\": \"www\",\n                    \"pod-template-hash\": \"764df977c5\"\n                },\n                \"name\": \"www-deployment-764df977c5-6zkld\",\n                \"namespace\": \"instance-152\",\n                \"ownerReferences\": [\n                    {\n                        \"apiVersion\": \"apps/v1\",\n                        \"blockOwnerDeletion\": true,\n                        \"controller\": true,\n                        \"kind\": \"ReplicaSet\",\n                        \"name\": \"www-deployment-764df977c5\",\n                        \"uid\": \"2bb18d66-97d0-4ba5-ba61-8047dcf31b75\"\n                    }\n                ],\n                \"resourceVersion\": \"3228\",\n                \"selfLink\": \"/api/v1/namespaces/instance-152/pods/www-deployment-764df977c5-6zkld\",\n                \"uid\": \"8fb9fb35-51e1-4be1-ba13-d83ed7863dac\"\n            },\n            \"spec\": {\n                \"containers\": [\n                    {\n                        \"envFrom\": [\n                            {\n                                \"configMapRef\": {\n                                    \"name\": \"dotenv\"\n                                }\n                            }\n                        ],\n                        \"image\": \"registry.digitalocean.com/production-openode/mytestt5667:mytestt5667--152--1344\",\n                        \"imagePullPolicy\": \"Always\",\n                        \"name\": \"www\",\n                        \"ports\": [\n                            {\n                                \"containerPort\": 80,\n                                \"protocol\": \"TCP\"\n                            }\n                        ],\n                        \"resources\": {\n                            \"limits\": {\n                                \"ephemeral-storage\": \"100Mi\",\n                                \"memory\": \"200Mi\"\n                            },\n                            \"requests\": {\n                                \"ephemeral-storage\": \"100Mi\",\n                                \"memory\": \"100Mi\"\n                            }\n                        },\n                        \"terminationMessagePath\": \"/dev/termination-log\",\n                        \"terminationMessagePolicy\": \"File\",\n                        \"volumeMounts\": [\n                            {\n                                \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                                \"name\": \"default-token-wl8pw\",\n                                \"readOnly\": true\n                            }\n                        ]\n                    }\n                ],\n                \"dnsPolicy\": \"ClusterFirst\",\n                \"enableServiceLinks\": true,\n                \"imagePullSecrets\": [\n                    {\n                        \"name\": \"regcred\"\n                    }\n                ],\n                \"nodeName\": \"pool-test-0ve7\",\n                \"priority\": 0,\n                \"restartPolicy\": \"Always\",\n                \"schedulerName\": \"default-scheduler\",\n                \"securityContext\": {},\n                \"serviceAccount\": \"default\",\n                \"serviceAccountName\": \"default\",\n                \"terminationGracePeriodSeconds\": 30,\n                \"tolerations\": [\n                    {\n                        \"effect\": \"NoExecute\",\n                        \"key\": \"node.kubernetes.io/not-ready\",\n                        \"operator\": \"Exists\",\n                        \"tolerationSeconds\": 300\n                    },\n                    {\n                        \"effect\": \"NoExecute\",\n                        \"key\": \"node.kubernetes.io/unreachable\",\n                        \"operator\": \"Exists\",\n                        \"tolerationSeconds\": 300\n                    }\n                ],\n                \"volumes\": [\n                    {\n                        \"name\": \"default-token-wl8pw\",\n                        \"secret\": {\n                            \"defaultMode\": 420,\n                            \"secretName\": \"default-token-wl8pw\"\n                        }\n                    }\n                ]\n            },\n            \"status\": {\n                \"conditions\": [\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:14:11Z\",\n                        \"status\": \"True\",\n                        \"type\": \"Initialized\"\n                    },\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:14:11Z\",\n                        \"message\": \"containers with unready status: [www]\",\n                        \"reason\": \"ContainersNotReady\",\n                        \"status\": \"False\",\n                        \"type\": \"Ready\"\n                    },\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:14:11Z\",\n                        \"message\": \"containers with unready status: [www]\",\n                        \"reason\": \"ContainersNotReady\",\n                        \"status\": \"False\",\n                        \"type\": \"ContainersReady\"\n                    },\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:14:11Z\",\n                        \"status\": \"True\",\n                        \"type\": \"PodScheduled\"\n                    }\n                ],\n                \"containerStatuses\": [\n                    {\n                        \"image\": \"registry.digitalocean.com/production-openode/mytestt5667:mytestt5667--152--1344\",\n                        \"imageID\": \"\",\n                        \"lastState\": {},\n                        \"name\": \"www\",\n                        \"ready\": false,\n                        \"restartCount\": 0,\n                        \"started\": false,\n                        \"state\": {\n                            \"waiting\": {\n                                \"reason\": \"ContainerCreating\"\n                            }\n                        }\n                    }\n                ],\n                \"hostIP\": \"10.136.184.7\",\n                \"phase\": \"Pending\",\n                \"qosClass\": \"Burstable\",\n                \"startTime\": \"2020-03-03T19:14:11Z\"\n            }\n        },\n        {\n            \"apiVersion\": \"v1\",\n            \"kind\": \"Pod\",\n            \"metadata\": {\n                \"creationTimestamp\": \"2020-03-03T19:12:05Z\",\n                \"generateName\": \"www-deployment-9987c7864-\",\n                \"labels\": {\n                    \"app\": \"www\",\n                    \"pod-template-hash\": \"9987c7864\"\n                },\n                \"name\": \"www-deployment-9987c7864-kqsh6\",\n                \"namespace\": \"instance-152\",\n                \"ownerReferences\": [\n                    {\n                        \"apiVersion\": \"apps/v1\",\n                        \"blockOwnerDeletion\": true,\n                        \"controller\": true,\n                        \"kind\": \"ReplicaSet\",\n                        \"name\": \"www-deployment-9987c7864\",\n                        \"uid\": \"51c7aa8b-ae73-4f1c-82a7-d8e66ff23e4a\"\n                    }\n                ],\n                \"resourceVersion\": \"3071\",\n                \"selfLink\": \"/api/v1/namespaces/instance-152/pods/www-deployment-9987c7864-kqsh6\",\n                \"uid\": \"44dae975-b36c-4b41-b455-e031f37f27f9\"\n            },\n            \"spec\": {\n                \"containers\": [\n                    {\n                        \"envFrom\": [\n                            {\n                                \"configMapRef\": {\n                                    \"name\": \"dotenv\"\n                                }\n                            }\n                        ],\n                        \"image\": \"registry.digitalocean.com/production-openode/mytestt5667:mytestt5667--152--1341\",\n                        \"imagePullPolicy\": \"Always\",\n                        \"name\": \"www\",\n                        \"ports\": [\n                            {\n                                \"containerPort\": 80,\n                                \"protocol\": \"TCP\"\n                            }\n                        ],\n                        \"resources\": {\n                            \"limits\": {\n                                \"ephemeral-storage\": \"100Mi\",\n                                \"memory\": \"200Mi\"\n                            },\n                            \"requests\": {\n                                \"ephemeral-storage\": \"100Mi\",\n                                \"memory\": \"100Mi\"\n                            }\n                        },\n                        \"terminationMessagePath\": \"/dev/termination-log\",\n                        \"terminationMessagePolicy\": \"File\",\n                        \"volumeMounts\": [\n                            {\n                                \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                                \"name\": \"default-token-wl8pw\",\n                                \"readOnly\": true\n                            }\n                        ]\n                    }\n                ],\n                \"dnsPolicy\": \"ClusterFirst\",\n                \"enableServiceLinks\": true,\n                \"imagePullSecrets\": [\n                    {\n                        \"name\": \"regcred\"\n                    }\n                ],\n                \"nodeName\": \"pool-test-0ve7\",\n                \"priority\": 0,\n                \"restartPolicy\": \"Always\",\n                \"schedulerName\": \"default-scheduler\",\n                \"securityContext\": {},\n                \"serviceAccount\": \"default\",\n                \"serviceAccountName\": \"default\",\n                \"terminationGracePeriodSeconds\": 30,\n                \"tolerations\": [\n                    {\n                        \"effect\": \"NoExecute\",\n                        \"key\": \"node.kubernetes.io/not-ready\",\n                        \"operator\": \"Exists\",\n                        \"tolerationSeconds\": 300\n                    },\n                    {\n                        \"effect\": \"NoExecute\",\n                        \"key\": \"node.kubernetes.io/unreachable\",\n                        \"operator\": \"Exists\",\n                        \"tolerationSeconds\": 300\n                    }\n                ],\n                \"volumes\": [\n                    {\n                        \"name\": \"default-token-wl8pw\",\n                        \"secret\": {\n                            \"defaultMode\": 420,\n                            \"secretName\": \"default-token-wl8pw\"\n                        }\n                    }\n                ]\n            },\n            \"status\": {\n                \"conditions\": [\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:12:05Z\",\n                        \"status\": \"True\",\n                        \"type\": \"Initialized\"\n                    },\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:12:10Z\",\n                        \"status\": \"True\",\n                        \"type\": \"Ready\"\n                    },\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:12:10Z\",\n                        \"status\": \"True\",\n                        \"type\": \"ContainersReady\"\n                    },\n                    {\n                        \"lastProbeTime\": null,\n                        \"lastTransitionTime\": \"2020-03-03T19:12:05Z\",\n                        \"status\": \"True\",\n                        \"type\": \"PodScheduled\"\n                    }\n                ],\n                \"containerStatuses\": [\n                    {\n                        \"containerID\": \"docker://46917a2056106160fbe553376f8a48d4bf1159e135a91e3693845252b5729e6b\",\n                        \"image\": \"registry.digitalocean.com/production-openode/mytestt5667:mytestt5667--152--1341\",\n                        \"imageID\": \"docker-pullable://registry.digitalocean.com/production-openode/mytestt5667@sha256:a0113335019ce6f0f83cf3440221dfa4fa0bc0c9250d1c526c2503d13728c230\",\n                        \"lastState\": {},\n                        \"name\": \"www\",\n                        \"ready\": true,\n                        \"restartCount\": 0,\n                        \"started\": true,\n                        \"state\": {\n                            \"running\": {\n                                \"startedAt\": \"2020-03-03T19:12:09Z\"\n                            }\n                        }\n                    }\n                ],\n                \"hostIP\": \"10.136.184.7\",\n                \"phase\": \"Running\",\n                \"podIP\": \"10.244.0.28\",\n                \"podIPs\": [\n                    {\n                        \"ip\": \"10.244.0.28\"\n                    }\n                ],\n                \"qosClass\": \"Burstable\",\n                \"startTime\": \"2020-03-03T19:12:05Z\"\n            }\n        }\n    ],\n    \"kind\": \"List\",\n    \"metadata\": {\n        \"resourceVersion\": \"\",\n        \"selfLink\": \"\"\n    }\n}\n","stderr":"","exit_code":0}},{"cmd_name":"logs","result":{"stdout":"","stderr":"Error from server (BadRequest): container \"www\" in pod \"www-deployment-764df977c5-6zkld\" is waiting to start: ContainerCreating\n","exit_code":1}},{"cmd_name":"finalize","result":"done"}],"errors":[]},"created_at":"2020-03-03T19:13:26.941Z","updated_at":"2020-03-03T19:14:13.427Z","events":[{"status":"running","level":"info","update":"Verifying allowed to deploy..."},{"status":"running","level":"info","update":"Preparing instance image..."},{"status":"running","level":"info","update":"Sending build context to Docker daemon  28.16kB\r\r\nStep 1/15 : FROM node:12-alpine\n ---\u003e 3fb8a14691d9\nStep 2/15 : WORKDIR /opt/app\n ---\u003e Using cache\n ---\u003e 3664c74f0d27\nStep 3/15 : ENV PORT=80\n ---\u003e Using cache\n ---\u003e 32ffd84fb732\nStep 4/15 : RUN apk --update add make python gcc g++\n ---\u003e Using cache\n ---\u003e c6ee47b901c6\nStep 5/15 : RUN npm install -g nodemon\n ---\u003e Using cache\n ---\u003e 2b86b2da1c53\nStep 6/15 : RUN npm install -g pm2\n ---\u003e Using cache\n ---\u003e 040877794eeb\nStep 7/15 : RUN echo 'set -e' \u003e /boot.sh # this is the script which will run on start\n ---\u003e Using cache\n ---\u003e c436ab0c9c66\nStep 8/15 : RUN echo 'nb=`cat package.json | grep start | wc -l` \u0026\u0026 if test \"$nb\" = \"0\" ; then echo \"*** Boot issue: No start command found in your package.json in the scripts. See https://docs.npmjs.com/cli/start\" ; exit 1 ; fi' \u003e\u003e /boot.sh\n ---\u003e Using cache\n ---\u003e abb58965a536\nStep 9/15 : RUN echo 'echo will install crond...' \u003e\u003e /boot.sh\n ---\u003e Using cache\n ---\u003e abbfcdca6261\nStep 10/15 : RUN echo 'crond' \u003e\u003e /boot.sh\n ---\u003e Using cache\n ---\u003e 68d07970911d\nStep 11/15 : COPY package*.json ./\n ---\u003e d7abc623c4a1\nStep 12/15 : RUN npm install --production\n ---\u003e Running in 9aed6b041a2b\n\u001b[91mnpm WARN\u001b[0m\u001b[91m helloworld@1.0.0 No description\n\u001b[0m\u001b[91mnpm \u001b[0m\u001b[91mWARN helloworld@1.0.0 No repository field.\n\u001b[0m\u001b[91m\n\u001b[0mup to date in 0.49s\nfound 0 vulnerabilities\n\nRemoving intermediate container 9aed6b041a2b\n ---\u003e e6044dfedc7b\nStep 13/15 : COPY . .\n ---\u003e 09a66d856d4e\nStep 14/15 : RUN mkdir -p logs\n ---\u003e Running in 2aad025673ec\nRemoving intermediate container 2aad025673ec\n ---\u003e 84454889065f\nStep 15/15 : CMD sh /boot.sh \u0026\u0026 pm2-runtime --output logs/out.log --error logs/error.log start npm -- start\n ---\u003e Running in b8586ac81bb4\nRemoving intermediate container b8586ac81bb4\n ---\u003e cfba0e33a1ad\nSuccessfully built cfba0e33a1ad\nSuccessfully tagged registry.digitalocean.com/production-openode/mytestt5667:mytestt5667--152--1344\n"},{"status":"running","level":"info","update":"Instance image ready."},{"status":"running","level":"info","update":"Pushing instance image..."},{"status":"running","level":"info","update":"Instance image pushed successfully."},{"status":"running","level":"info","update":"Applying instance environment..."},{"status":"running","level":"info","update":"Important notice: subdomains have \u003cyour sitename\u003e.dev.openode.io without SSL during the beta phase. Soon they will be replaced with \u003cyour sitename\u003e.openode.io and with HTTPS."},{"status":"running","level":"info","update":"namespace/instance-152 unchanged\nconfigmap/dotenv configured\ndeployment.apps/www-deployment configured\nservice/main-service unchanged\ningress.extensions/main-ingress unchanged\n"},{"status":"running","level":"info","update":"Verifying instance up..."},{"status":"running","level":"info","update":"...instance verification finished."},{"status":"running","level":"info","update":"Finalizing..."},{"status":"success","level":"info","update":""},{"status":"success","level":"info","update":{"details":{"result":"success","url":"http://mytestt5667.dev.openode.io/"}}},{"status":"success","level":"info","update":"...finalized."}],"type":"Deployment"}